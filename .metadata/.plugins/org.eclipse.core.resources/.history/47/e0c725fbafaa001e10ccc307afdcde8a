package binary.tree;

public class BinarySearchTree {
	Node root;

	void insert(Node node) {
		this.root = insertHelper(this.root, node);
	}

	private Node insertHelper(Node root, Node node) {
		int data = node.data;
		if (root == null) {
			this.root = node;
			return this.root;
		} else if (data < root.data) {
			this.root.left = insertHelper(this.root.left, node);
		} else {
			this.root.right = insertHelper(this.root.right, node);
		}
		return null;
	}

	void display() {
	}

	private void displayHelper() {
	}

	boolean search(int data) {
		return false;
	}

	private boolean searchHelper(Node root, int data) {
		return false;
	}

	void remove(int data) {
	}

	private Node removeHelper(Node root, int data) {
		return null;
	}

	private int successor(Node root) {
		return 0;
	}

	private int predecessor(Node root) {
		return 0;
	}
}
